<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>面向对象的程序设计</title><link>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/</link><description>Recent content on 面向对象的程序设计</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/CTS-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/CTS-1/</guid><description>CTS-1 # 咖喱铁路售票系统curry ticketing system -1
题目背景 # ​ 在世界上某个能歌善舞的国家，铁路系统实行配额制，即为弱势群体提供不同的票价优惠，人们通过实名制进行铁路火车票预订，可以查询线路图和购票情况。铁路管理员则负责管理铁路线路，火车营运。同时，还存在团购性质的代理人，能够一次性购买更多的车票。为了让大家能够有序购票乘车，现开发一款铁路售票管理系统，实现上述场景功能。
功能描述 # ① 开关机 # 实现最基本的命令读入和退出功能
首先，你的任务是编写一个Test类：
当程序启动，进入main方法，并连续读入输入的命令，命令的基本格式为：
选项 [参数1] [参数2] [参数3] 其中参数数目为不定项
当终端输入 QUIT 时，系统退出（程序退出状态为0），并在终端打印一行字符：
----- Good Bye! ----- 对于其他的输入，不做任何处理，等待下一行输入 下方是按行读取的一种参考实现 Scanner in = new Scanner(System.in); String argStr; while (true) { argStr = in.nextLine(); } ②用户注册 # 黄金右手国的居民们使用的身份证称为“Aadhaar卡&amp;quot;，铁路系统内的用户注册需要填写姓名、性别、Aadhaar卡号。其中Aadhaar号需要满足以下格式：
Aadhaar卡号一共12位，全国唯一 前4位为区域代码，范围是[0001,1237] 中间4位为种姓代码，范围为[0020,0460] 最后四位为生物识别库提供的生物识别码，前三位的范围为[000,100]，最后一位表示持有人的性别，0代表女性，1代表男性，2代表其他。 合法的Aadhaar卡号示例：
0023 0122 0991 1000 0072 0000 不合法的Aadhaar卡号示例：
0000 0122 0991 0030 0500 1010 1234 0123 0553 具体实现</description></item><item><title/><link>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/CTS-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/CTS-2/</guid><description>CTS-2
咖喱铁路售票系统curry ticketing system -2
题目背景 # 售票系统最核心的功能是什么？当然是售票啦！现在请你在CTS-1的基础上实现以下功能：
超级管理员 # 本着“以抢钱为宗旨，待旅客如孙子”的宗旨，咖喱铁路票价的定价权必须掌握在高层的手中。高层管理人员拥有一句神奇的咒语，向系统中输入这句咒语即可进入管理员模式，进行关键数据的修改。
那么这句咒语就是——TunakTunakTun（译：我在东北玩泥巴）
实现以下功能：
命令 功能描述 TunakTunakTun 从标准模式进入超级管理员模式，并输出DuluDulu NutKanutKanut 退出超级管理员模式，并输出DaDaDa 异常处理 若已经在管理员模式下执行TunakTunakTun或在普通模式下执行NutKanutKanut，输出WanNiBa 注：以下功能前备注（超级管理员模式）为仅可以在超级管理员模式下执行的命令，（标准模式）为仅可以在标准模式下执行的命令，未标注的命令在两种模式下均可执行。
线路和列车管理 # 为方便起见，我们假定在黄金右手国，所有的铁路线路都是从首都第三新德里市（Delhi-3）出发，沿自己的线路折返运行，跨线换乘需要在第三新德里市下车并重新购买车票，并且乘客中途到站下车不释放席位。
在超级管理员模式下可以向系统中添加新建成的线路列车、指定票价、席位数量信息等操作。
线路管理 # （超级管理员模式）添加和删除线路
命令 参数1 参数2 参数2k+1(k&amp;gt;=1整数) 参数2*(k+1) 功能描述 addLine 线路编号 负载能力 站点名2k+1 里程数2k+1 添加一条新的线路，并添加初始站点，若成功则输出Add Line success 里程数计算方式：起点第三新德里市（站点0）的里程数为0，每个站点的里程数为该站距第三新德里市的里程（里程数可以相同）。线路编号为字符串类型，负载能力表示该线路上能开行的最大列车数量。 delLine 线路编号 删除线路，并删除在该线路上运行的全部列车。若成功输出Del Line success 异常处理
添加线路时站点名和里程数一一对应，里程数应为整数类型，否则不做任何修改并输出Arguments illegal 添加线路时同一线路上的的两个站名不得重复（没有环线），否则不做任何修改并输出Station duplicate 添加线路时线路编号不得重复，否则不做任何修改并输出Line already exists，删除线路时线路号必须存在，否则输出Line does not exist 添加线路时负载能力应该在合理的范围内（不能跑车的铁路修了个寂寞），否则输出Capacity illegal。 （超级管理员模式）添加和删除车站
命令 参数1 参数2 参数3 功能描述 addStation 线路编号 新站点名 里程数 向线路中添加新的站点，若成功则输出Add Station success delStation 线路编号 站点名 从线路中删除指定站点，若成功则输出Delete Station success 异常处理</description></item><item><title/><link>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/CTS-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/CTS-3/</guid><description>CTS-3 # 咖喱铁路售票系统curry ticketing system -1
约定 # 这次真的超级简单der
CTS-3会测试前面已实现的功能，但不会加强，所以只要CTS-2能过就不会出现旧功能的问题
对于一行命令输入，只报优先级最高的一个错误，报错优先级为：
命令名称 &amp;gt; 参数数量 &amp;gt; 参数合法性（从左至右） 其它情况请以功能描述要求的报错顺序为准
概览 # ​ 本次CTS-3你需要实现的全部新功能（命令）如下表所示，详细要求请见下文。
命令 参数1 参数2 参数3 参数4 参数5 功能描述 login Aadhaar卡号 姓名 用户登录，是购票的前序操作 logout 退出当前登录的用户账户 buyTicket 列车车次 出发站 目的站 席位代号 张数 用户购买车票 listOrder 查询已购买的车票 login # ​
命令 参数1 参数2 功能描述 login Aadhaar卡号 姓名 用户登录，是购票的前序操作 已注册用户通过该指令登录系统，登录后直到主动登出或者退出系统之前需维持当前登录状态，与超级管理员模式不冲突（不会不管不考）。
输出
登录成功输出Login success 异常处理
命令不存在，输出Command does not exist 参数数量不正确，输出Arguments illegal 当前已有用户登录，输出You have logged in Aadhaar卡号不合法或不存在，输出User does not exist 姓名与卡号不对应，输出Wrong name 样例</description></item><item><title/><link>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/CTS-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://Super-BUAA-2021.github.io/Java-HomeWork/docs/CTS/CTS-4/</guid><description>CTS-4 # 概览 # 考察内容：继承、方法重写、文件I/O等
本次CTS-4你需要实现的全部新功能（命令）如下表所示，详细要求请见下文。
虽然功能看起来不少，但是大部分是在原有基础上修改，新增功能逻辑比较简单。加油，CTS就要结束咧！
命令 参数1 参数2 参数3 参数4 参数5 功能描述 【修改】addUser 姓名 性别 卡号 学生优惠额度 无 添加用户【添加学生购票标志】 【修改】buyTicket 列车车次 出发站 目的站 席位代号 张数 用户购买车票【添加核酸检测判断】 【新增】rechargeBalance 充值金额 无 无 无 无 充值钱包余额 【新增】checkBalance 无 无 无 无 无 查询余额 【新增】importCert CSV文件名 无 无 无 无 导入核酸检测报告 【新增】cancelOrder 列车车次 出发站 目的站 席位代号 张数 取消订单 【新增】payOrder 无 无 无 无 无 支付全部未付款订单 【修改】listOrder 无 无 无 无 无 查询已购买的车票listOrder 以下功能在原来基础上修改 # 学生票功能 # 每位学生有多次以0.</description></item></channel></rss>