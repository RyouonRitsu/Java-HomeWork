<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>面向对象的程序设计</title><link>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/</link><description>Recent content on 面向对象的程序设计</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/MySCS-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/MySCS-1/</guid><description>MySCS -1 # 同学们，从这周开始，我们会迭代完成一个MySCS，即从零开发的软件学院云平台（青春版）。
我们每两周会增加一次新的需求，如，MySCS-1需要大家完成账号注册和登录系统，MySCS-2需要大家在1的基础上添加课程系统或其它系统等。
编写好的代码需要大家用patpat评测，所有测试点都通过以后即可上传到云平台完成本次实验。希望大家认真完成哦！请勿抄袭，抄袭会被查到的（盯
题目背景 # 软件学院云平台（青春版），即MySCS，是一款更加轻量化的命令行操作的云平台，屏幕前的你拥有完全自主知识产权，有极大的使用价值和收藏价值。
MySCS分为教师端和学生端，可以实现传统scs的大部分功能，如教师端对课程的增删改查，对课程所属的实验的增删改查，教师还可以为课程添加学生和助教，学生可以查看参与的课程并提交实验作业，助教可以协同老师管理课程等。
命令概览 # 命令行 功能 输出 QUIT 系统关机 &amp;mdash;&amp;ndash; Good Bye! &amp;mdash;&amp;ndash; register 学工号 名 姓 邮箱 密码 确认密码 注册 register success
already logged in
user id illegal
user id duplication
user name illegal
email address illegal
password illegal
passwords inconsistent login 学工号 密码 登录 Hello 名~
Hello Professor 姓~
already logged in
user id illegal
user id not exist</description></item><item><title/><link>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/MySCS-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/MySCS-2/</guid><description>MySCS-2 # 同学们，我们用了两周时间完成了MySCS的部分功能，已经实现了老师端和学生端的登录注册。
我们每两周会增加一次新的需求，MySCS-2需要大家在MySCS-1的基础上完成管理端的基础命令，MySCS-3需要大家在2的基础上添加学生操作以及其他功能等。（挖坑
编写好的代码需要大家用patpat评测，所有测试点都通过以后即可上传到云平台完成本次实验。希望大家认真完成哦！请勿抄袭，抄袭会被查到的（盯
题目背景 # 软件学院云平台（青春版），即MySCS，是一款更加轻量化的命令行操作的云平台，屏幕前的你拥有完全的自主知识产权，有极大的使用价值和收藏价值。
MySCS分为管理端（老师端和助教端）和学生端，可以实现传统的scs的大部分功能。本此实验将完成管理端的基础操作，需要基于MySCS-1编写（建议备份一下MySCS-1，然后拷贝一下来搭MySCS-2）。
命令概览 # 命令行 功能 输出 addCourse 课程号 课程名称 添加课程（老师端） add course success removeCourse 课程号 移除课程（老师端） remove course success listCourse 列出课程（老师端） [ID:课程编号] [Name:课程名称] [TeacherNum:老师人数] [AssistantNum:助教人数] [StudentNum:学生人数] selectCourse 课程号 选择课程（管理端） select course success addAdmin 学工号 学工号 &amp;hellip; 添加课程管理端成员（老师端） add admin success removeAdmin 学工号 移除课程管理端成员（老师端） remove admin success listAdmin 列出课程管理端成员（管理端） [ID:学工号] [Name:姓 名] [Type:用户身份(Professor/Assistant)] [Email:电子邮箱] changeRole 有助教身份的学生切换身份 change into Assistant success
change into Student success addWare 资料编号 资料名称 添加课程资料（老师端） add ware success removeWare 资料编号 移除课程资料（老师端） remove ware success listWare 列出课程资料（管理端） [ID:课程资料编号] [Name:课程资料名称] addTask 作业编号 作业名称 作业开始时间 作业截至时间 添加课程作业（管理端） add task success removeTask 作业编号 移除课程作业（管理端） remove task success listTask 列出课程作业（管理端） [ID:课程作业编号] [Name:课程作业名称] [ReceiveNum:接收作业份数] [StartTime:开始时间] [EndTime:截止时间] addStudent 学工号 学工号 &amp;hellip; 添加课程学生（管理端） add student success removeStudent 学工号 移除课程学生（管理端） remove student success listStudent 列出课程学生（管理端） [ID:学工号] [Name:姓 名] [Email:电子邮箱] 功能描述 # 0.</description></item><item><title/><link>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/MySCS-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/MySCS-3/</guid><description>MySCS-3 # 同学们，在上一次的迭代中，我们已经完成了管理端的命令开发，接下来我们需要完成学生端的命令了。
编写好的代码需要使用patpat进行评测，AC后即可上传到云平台以完成本次的实验内容。希望大家认真且保质保量的完成，请勿抄袭，如有发现抄袭现象将取消迭代作业成绩。
题目背景 # 软件学院云平台（青春版），即MySCS，是一款更加轻量化的命令行操作的云平台，屏幕前的你拥有完全的自主知识产权，有极大的使用价值和收藏价值。本平台模拟一台操作机上的命令行，所有操作均在本地进行，不支持联网操作，同一时间的使用者有且仅有一个。
MySCS分为管理端（老师端和助教端）和学生端，可以实现传统的scs的大部分功能。本次迭代需要完成的内容为学生端命令的开发，请尽可能直接基于AC后的MySCS-2代码编写，否则可能发生其他异常情况，另外注意此前迭代AC了也不能确保你的程序是完全正确的。
注意在这次的迭代中修改了部分输出格式，同时也为部分之前的命令增添了新的功能。
整体约束 # 当输入的命令未定义时，输出
command &amp;#39;$命令&amp;#39; not found 例如： 输入 loggin 19375030 123456
由于命令 loggin 未定义，所以输出 command 'loggin' not found
若以下 功能描述中有明确给出输出顺序，则以它为准
若不满足第二条，则保持原输出顺序不改变
当输入的命令有定义，但是参数的个数不合法要求时，输出
arguments illegal 输入： login 19375030 123456 haha 和 login 19375030 都对应着 arguments illegal
当命令有定义，参数个数正确时，才会输出 Bye~ 或者 user id illegal 等成功或失败输出
当一句命令存在多种非法情况，按上述顺序只输出最先发生的非法信息
例如，注册时学号和姓名均非法，按上述顺序，输出 user id illegal，而不是user name illegal
评测时，请将所有文件放到patpat可执行文件相同路径下。例如：
MySCS\example ├─LAB1.md ├─Lesson1.txt ├─19376054.task ├─T191743.ans ├─patpat.exe ├─3-学号-姓名 │ ├─out │ └─src │ └─Test.</description></item><item><title/><link>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/MySCS-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryouonritsu.github.io/Java-HomeWork/docs/MySCS/MySCS-4/</guid><description>MySCS-4 # 编写好的代码需要使用patpat进行评测，AC后即可上传到云平台以完成本次的实验内容。希望大家认真且保质保量的完成，请勿抄袭，如有发现抄袭现象将取消迭代作业成绩。
题目背景 # 软件学院云平台（青春版），即MySCS，是一款更加轻量化的命令行操作的云平台，屏幕前的你拥有完全的自主知识产权，有极大的使用价值和收藏价值。本平台模拟一台操作机上的命令行，所有操作均在本地进行，不支持联网操作，同一时间的使用者有且仅有一个。
本次迭代主要依托于MySCS2，仅涉及MySCS3中学生选择课程相关的操作。
整体约束 # 本次迭代将不再重复考察此前类关系设计、错误处理等，而是将重点放置在对面向对象特性的考察。MYSCS4题目复杂性大大降低。如果同学们能够认真完成Lab，实现起来将会非常轻松。在本次题目中，我们将对程序实现提出一些具体类设计提示（当然这也是为了辅助同学们能够更轻松地实现题目需求），若同学们基于自己的类设计能有更好的实现也当然可以。
注意： 你不需要考虑任何错误数据，评测保证所有数据均为合法数据。
总体说明 # 你需要了解的： # 序列化与反序列化
Java 序列化就是指把 Java 对象转换为字节序列的过程
Java 反序列化就是指把字节序列恢复为 Java 对象的过程。
序列化最重要的作用：在传递和保存对象时，保证对象的完整性和可传递性。对象转换为有序字节流，以便在网络上传输或者保存在本地文件中。
反序列化的最重要的作用：根据字节流中保存的对象状态及描述信息，通过反序列化重建对象。
总结：核心作用就是对象状态的保存和重建。（整个过程核心点就是字节流中所保存的对象状态及描述信息）
在本次迭代中，我们简化了传递这一过程。在本机中，由 A 学生将自己的虚拟机对象保存为序列化文件，再由 B 学生读取序列化文件，并反序列化生成虚拟机对象并持有。
可供参考：
理论：https://blog.csdn.net/weixin_45433031/article/details/115364830
实践：https://www.cnblogs.com/com-Jacob/p/16207339.html
例如你实例化了一个对象，名字为小明，此时这个小明对象只在你程序运行期间存在，运行结束后就消失了，但是你可以通过序列化，将小明对象转换为字节序列（在运行期间这个对象本质也只是一串数据）存储到本地文件中，之后即可通过反序列化将这个文件中存储的字节序列转换回一个名字叫小明的对象。
命令概览 # 命令 功能描述 requestVM 系统类型 申请虚拟机 startVM 启动虚拟机 clearVM 机器编号 清空虚拟机 logVM 查看历史指令 uploadVM 路径 上传虚拟机 downloadVM 路径 下载虚拟机 功能描述 # 申请虚拟机 # 命令 参数 requestVM 系统类型 使用对象：学生端
功能：根据系统类型在当前课程下申请虚拟机，其中系统类型仅有三种可能：Windows, Linux, MacOS。</description></item></channel></rss>