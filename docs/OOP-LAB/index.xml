<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>面向对象的程序设计</title><link>https://ryouonritsu.github.io/Java-HomeWork/docs/OOP-LAB/</link><description>Recent content on 面向对象的程序设计</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://ryouonritsu.github.io/Java-HomeWork/docs/OOP-LAB/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ryouonritsu.github.io/Java-HomeWork/docs/OOP-LAB/LAB01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryouonritsu.github.io/Java-HomeWork/docs/OOP-LAB/LAB01/</guid><description>Lab01: 认识 Java # 1. 实验⽬的 # 掌握 Java 环境配置 使用 CMD 编译运行 Java 程序 使用 IDE 编译运行 Java 应用程序 理解 Java 语言中的关键字、标识符并能灵活使用 理解、掌握 Java 语言的简单数据类型并能灵活使用（重点强制类型转换） 理解引用数据类型，理解简单数据类型和引用数据类型的特点 理解、掌握 Java 语言中的运算符并能灵活使用 理解、掌握常量与变量的概念并能灵活使用 2. 编译与运行 # Question01 # 借助身边的工具，学习 java， javac 等命令的使用，并尝试通过命令行来编译并运行一个 Java 程序，输出 Hello, World!，提交你所使用的命令和运行结果截图。
Question02 # 相信这一定难不倒聪明的你，接下来我们略微增加一点点难度 ~ 你需要输出很多 Hello, World!
本题需要你实现一个 Test 类：
程序开始运行，进入main方法，并输出你的学号和姓名
当终端输入 QUIT 时，系统退出，并在终端打印一行字符：
----- Good Bye! ----- 对于其他的输入，在终端中输出一行 Hello, World!，等待下一行输入 你需要提交运行时的截图。
程序退出 # 和 C 语言的return 0类似，Java 程序也有其退出码，整个程序的正常的退出码应该为 0，而不应该为-1、1 等。</description></item><item><title/><link>https://ryouonritsu.github.io/Java-HomeWork/docs/OOP-LAB/TEMPLATE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryouonritsu.github.io/Java-HomeWork/docs/OOP-LAB/TEMPLATE/</guid><description> Lab XX Assignment # 班级：
学号：
姓名：
提交要求（以下内容在最终提交的作业中可以删除，仅作参考） # 目录格式
-- 班级-学号-姓名-LabXX.zip |-- answer.pdf |-- solution |-- Question1 |-- 题1的代码文件(如果需要) |-- Question2 |-- 题2的代码文件(如果需要) |-- ...</description></item><item><title/><link>https://ryouonritsu.github.io/Java-HomeWork/docs/OOP-LAB/LAB02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ryouonritsu.github.io/Java-HomeWork/docs/OOP-LAB/LAB02/</guid><description>Lab02: Java 语法 &amp;amp; 面向对象初步 # 1. 实验目的 # 掌握 Java 环境配置 使⽤ CMD 编译运⾏ Java 程序 使⽤ IDE 编译运⾏ Java 应⽤程序 理解 Java 语⾔中的关键字、标识符并能灵活使⽤ 理解、掌握 Java 语⾔的简单数据类型并能灵活使⽤（重点强制类型转换） 理解引⽤数据类型，理解简单数据类型和引⽤数据类型的特点 理解、掌握 Java 语⾔中的运算符并能灵活使⽤ 理解、掌握常量与变量的概念并能灵活使⽤ 理解、掌握 Java 语⾔的流程控制（重点 switch case break 语句）并能灵活使⽤ 理解、掌握 Java 语⾔的数组的声明、赋值及使⽤ 理解掌握面向对象思维方式，确定问题域，使用面向对象思维解决实际问题 2. Class 初步 # Question01 # 阅读下列 Java 源文件，并回答问题。
public class Person { void sayHello() { System.out.print(&amp;#34;您好，很高兴认识您&amp;#34;); System.out.println(&amp;#34;nice to meet you!&amp;#34;); } } class PersonTest { public static void main(String[] args) { Person rover = new Person(); rover.</description></item></channel></rss>